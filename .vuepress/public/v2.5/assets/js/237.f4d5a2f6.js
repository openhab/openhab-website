(window.webpackJsonp=window.webpackJsonp||[]).push([[237],{791:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"velleman-k8055-usb-io-board-binding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#velleman-k8055-usb-io-board-binding","aria-hidden":"true"}},[t._v("#")]),t._v(" Velleman k8055 USB IO Board Binding "),s("Badge",{attrs:{type:"warn",text:"v1"}})],1),t._v(" "),s("p",[t._v("This binding allows you to integrate a "),s("a",{attrs:{href:"http://www.vellemanusa.com/products/view/?country=us&lang=enu&id=500349",target:"_blank",rel:"noopener noreferrer"}},[t._v("Velleman k8055 USB IO Board"),s("OutboundLink")],1),t._v(" with openHAB.")]),t._v(" "),t._m(0),t._v(" "),s("p",[t._v("This binding makes use of JNI calls to the native k8055 library and thus requires that the native library is available.  The binding has been tested on Linux with the open-source "),s("a",{attrs:{href:"http://libk8055.sourceforge.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("libk8055"),s("OutboundLink")],1),t._v(" library.  In principle it should also work on Windows with the Velleman provided DLL as it has the same API, however this has not yet been tested.")]),t._v(" "),s("p",[t._v("For the binding to access the native library correctly, the following conditions must be met:")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),s("p",[t._v("The syntax of the binding configuration strings accepted is the following:")]),t._v(" "),t._m(6),s("p",[t._v("where:")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),s("p",[t._v("On some Linux distribution, the user openhab is running as may not have permissions to access the USB ports by default.  It is worth checking that the standalone command-line program (k8055) that comes with libk8055 works under the relevant Linux user before attempting to use the binding.  (Particularly as the driver outputs little useful debugging information to the logs).")]),t._v(" "),s("DocPreviousVersions"),t._v(" "),s("EditPageLink")],1)},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"prerequisites"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites","aria-hidden":"true"}},[this._v("#")]),this._v(" Prerequisites")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("The library must be installed somewhere in the library search path (in Linux, a system lib directory is fine; on Windows\\system32 folder.")]),this._v(" "),e("li",[this._v("The JVM being used to run openHAB must be the same 'bitness' as the library (i.e. 32bit/64bit).  If using the Velleman provided Windows DLL, this means running on a 32bit JVM.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"binding-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#binding-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Binding Configuration")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("This binding can be configured in the file "),e("code",[this._v("services/k8055.cfg")]),this._v(".")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("Property")]),t._v(" "),s("th",[t._v("Default")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Required")]),t._v(" "),s("th",[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("refresh")]),t._v(" "),s("td",[t._v("1000")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("No")]),t._v(" "),s("td",[t._v("how often the binding should read the state of the hardware inputs, in milliseconds")])]),t._v(" "),s("tr",[s("td",[t._v("boardno")]),t._v(" "),s("td"),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Yes")]),t._v(" "),s("td",[t._v("which board openhab should connect to. This must be specified to enable the binding.  Currently the binding only supports connecting to a single board.")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"item-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#item-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Item Configuration")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('k8055="<IO-type>:<IO-number>"\n')])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[s("strong",[t._v("IO-type")]),t._v(" is one of:")])]),t._v(" "),s("li",[s("p",[t._v("DIGITAL_IN - Supports "),s("em",[t._v("Contact")]),t._v(" Items")])]),t._v(" "),s("li",[s("p",[t._v("DIGITAL_OUT - Supports "),s("em",[t._v("Switch")]),t._v(" Items")])]),t._v(" "),s("li",[s("p",[t._v("ANALOG_IN - Supports "),s("em",[t._v("Number")]),t._v(" Items")])]),t._v(" "),s("li",[s("p",[t._v("ANALOG_OUT - Supports "),s("em",[t._v("Dimmer")]),t._v(" Items")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("IO-number")]),t._v(" is the number (1-8) of the particular IO channel to bind to.")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"examples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[this._v("#")]),this._v(" Examples")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dsl"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Output1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Digital Output 1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" k8055"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DIGITAL_OUT:1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Output2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Digital Output 2"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" k8055"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DIGITAL_OUT:2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dimmer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K8055_ANOUT_1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"K8055 Analog Output 1"')]),t._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" k8055"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ANALOG_OUT:1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dimmer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K8055_ANOUT_2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"K8055  Analog Output 2"')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" k8055"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ANALOG_OUT:2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Number")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K8055_ANIN_1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"K8055 Analog Input 1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" k8055"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ANALOG_IN:1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Number")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("K8055_ANIN_2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"K8055 Analog Input 2"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" k8055"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ANALOG_IN:2"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"troubleshooting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting","aria-hidden":"true"}},[this._v("#")]),this._v(" Troubleshooting")])}],!1,null,null,null);e.default=a.exports}}]);