(window.webpackJsonp=window.webpackJsonp||[]).push([[232],{785:function(e,t,n){"use strict";n.r(t);var r=n(0),s=Object(r.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"irtrans-binding"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#irtrans-binding","aria-hidden":"true"}},[e._v("#")]),e._v(" IRTrans Binding "),n("Badge",{attrs:{type:"warn",text:"v1"}})],1),e._v(" "),n("div",{staticClass:"danger custom-block"},[n("p",{staticClass:"custom-block-title"},[e._v("OBSOLETE BINDING")]),e._v(" "),n("p",[e._v("This 1.x binding is obsolete; it has been replaced by the 2.x "),n("router-link",{attrs:{to:"./../irtrans/"}},[e._v("irtrans")]),e._v(" binding which you should use instead.")],1)]),e._v(" "),n("p",[e._v("This binding communicates with the "),n("a",{attrs:{href:"http://www.irtrans.de",target:"_blank",rel:"noopener noreferrer"}},[e._v("IRTrans"),n("OutboundLink")],1),e._v(" infrared emitter/transceiver.")]),e._v(" "),n("p",[e._v("The IRTrans binding currently supports the Ethernet version of the IRtrans transceiver and communicates with the transceiver over a TCP connection.")]),e._v(" "),e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),n("p",[e._v("This binding does not need its own configuration.")]),e._v(" "),e._m(3),e._v(" "),n("p",[e._v("The format of the binding configuration is simple and looks like this:")]),e._v(" "),e._m(4),n("p",[e._v("where")]),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),n("p",[e._v("Here are some examples of valid binding configuration strings:")]),e._v(" "),e._m(11),n("p",[e._v("As a result, your lines in the items file might look like the following:")]),e._v(" "),e._m(12),n("DocPreviousVersions"),e._v(" "),n("EditPageLink")],1)},[function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"prerequisites"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites","aria-hidden":"true"}},[this._v("#")]),this._v(" Prerequisites")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Note:")]),this._v(" the IRtrans binding makes use of the TCP/UDP binding, and therefore also the TCP binding has to be installed and configured.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"binding-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#binding-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Binding Configuration")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"item-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#item-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Item Configuration")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('irtrans="[<command>:<ip address>:<port>:<led>:<device>:<ircommand>], [<command>:<ip address>:<port>:<led>:<device>:<ircommand>], ..."\n')])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("code",[e._v("<ip address>")]),e._v(" is the hostname or IP address in dotted notation of the remote host")]),e._v(" "),n("li",[n("code",[e._v("<led>")]),e._v(" is the transceiver led to be used to send or receive the infrared command, and is one of the following values: "),n("code",[e._v("DEFAULT")]),e._v(", "),n("code",[e._v("INTERNAL")]),e._v(", "),n("code",[e._v("EXTERNAL")]),e._v(", "),n("code",[e._v("ALL")]),e._v(", "),n("code",[e._v("ONE")]),e._v(", "),n("code",[e._v("TWO")]),e._v(", "),n("code",[e._v("THREE")]),e._v(", "),n("code",[e._v("FOUR")]),e._v(", "),n("code",[e._v("FIVE")]),e._v(", "),n("code",[e._v("SIX")]),e._v(", "),n("code",[e._v("SEVEN")]),e._v(", "),n("code",[e._v("EIGHT")]),e._v(".")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[t("strong",[this._v("Note:")]),this._v(" It is up to the user to check that the led value is valid for the device installed, e.g. not all IRtrans transceivers have the same number of led transmitters or received built-in. See the documentation of your IRtrans device.")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("p",[n("code",[e._v("<device>")]),e._v(" is the name of the device (category), as defined using the IRtrans LAN Server software")])]),e._v(" "),n("li",[n("p",[n("code",[e._v("<ircommand>")]),e._v(" is the name of the infrared command, as defined using the IRtrans LAN Server software, to be sent to the transceiver when "),n("code",[e._v("<command>")]),e._v(" is received. When an infrared command is received by the transceiver that matches the "),n("code",[e._v("<device>")]),e._v(":"),n("code",[e._v("<ircommand>")]),e._v(", then the Item will be updated with the "),n("code",[e._v("<command>")]),e._v(".")])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("It is possible to define wildcards for "),n("code",[e._v("<device>")]),e._v(" and "),n("code",[e._v("<ircommand>")]),e._v(": if either of them are equal to "),n("code",[e._v("**")]),e._v(" then respectively, any device that defines the given "),n("code",[e._v("<ircommand>")]),e._v(", or any "),n("code",[e._v("<ircommand>")]),e._v(" for the given "),n("code",[e._v("<device>")]),e._v(", will match and trigger the status update of the item. If you would put "),n("code",[e._v("**")]),e._v(" for both "),n("code",[e._v("<device>")]),e._v(" and "),n("code",[e._v("<ircommand>")]),e._v(" then any infrared command received by the transceiver will cause the item to be updated.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[t("strong",[this._v("Note:")]),this._v(" the IRtrans device does not communicate which "),t("code",[this._v("<led>")]),this._v(" a command is received by, so that information cannot be used to wildcard infrared commands received")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("blockquote",[n("p",[n("strong",[e._v("Note:")]),e._v(' If the item is of the type String, then any infrared command received by the transceiver will cause the Item to be updated with "'),n("code",[e._v("<device>")]),e._v(","),n("code",[e._v("<ircommand>")]),e._v('". Likewise, any string passed on by the OpenHAB runtime will simply be parsed using the "'),n("code",[e._v("<device>")]),e._v(","),n("code",[e._v("<ircommand>")]),e._v('" pattern. For such Items the '),n("code",[e._v("<command>")]),e._v(" element has to be omitted in the configuration string")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-dsl"}},[n("code",[e._v("irtrans"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"[ON:192.168.0.1:3000:1:pioneer:voldown]"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// send the 'voldown' infrared command of remote type 'pioneer' when ON is received")]),e._v("\nirtrans"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"[ON:192.168.0.1:3000:1:pioneer:*]"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// accept any command from remote of type Pioneer, e.g. any key press on the remote")]),e._v("\nirtrans"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"[ON:192.168.0.1:3000:*:pioneer:voldown]"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// send command on all leds")]),e._v("\nirtrans"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"[ON:192.168.0.1:3000:1:*:*]"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// accept all infrared commands from any type of remote")]),e._v("\nirtrans"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"[192.168.0.1:3000:1:*:*]"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// for String Items, take or update 'remote,command' strings that match the pattern")]),e._v("\n")])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-dsl"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Switch")]),e._v("  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("PioneerReceiver_Vol")]),e._v("     "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Pioneer"')]),e._v("      "),n("span",{pre:!0,attrs:{class:"token tag"}},[e._v(" (AV)")]),e._v("    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" irtrans"),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*[ON:192.168.0.1:3000:1:pioneer:volup], *[OFF:192.168.0.1:3000:1:pioneer:voldown]"')]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])}],!1,null,null,null);t.default=s.exports}}]);