(window.webpackJsonp=window.webpackJsonp||[]).push([[519],{560:function(e,t,i){"use strict";i.r(t);var s=i(0),a=Object(s.a)({},function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),i("p",[e._v("An audio sink is identified by an unique id which in general is similar to the thing type id.\nThe framework itself can handle multiple audio sinks at the same time.")]),e._v(" "),e._m(3),e._v(" "),i("p",[e._v("The distribution comes with these built-in audio sinks options:")]),e._v(" "),e._m(4),e._v(" "),i("p",[e._v("The framework is able to play sound either from the file system, from URLs (e.g. Internet radio streams) or generated by text-to-speech engines (which are available as optional Voice add-ons).")]),e._v(" "),e._m(5),e._v(" "),i("p",[e._v("TODO")]),e._v(" "),e._m(6),e._v(" "),i("p",[e._v("TODO")]),e._v(" "),i("DocPreviousVersions"),e._v(" "),i("EditPageLink")],1)},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"audio-voice"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#audio-voice","aria-hidden":"true"}},[this._v("#")]),this._v(" Audio & Voice")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("openHAB provides a modular architecture that enables all kinds of different use cases.\nAt its core, there is the notion of an "),t("em",[this._v("audio stream")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Audio streams are provided by "),t("em",[this._v("audio sources")]),this._v(" and consumed by "),t("em",[this._v("audio sinks")]),this._v(".\nEach binding for handling and controlling audio services can implement an audio sink to provide their supported devices to the framework to be used as sound output.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"build-in-audio-sinks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#build-in-audio-sinks","aria-hidden":"true"}},[this._v("#")]),this._v(" Build-in Audio Sinks")])},function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("table",[i("thead",[i("tr",[i("th",[e._v("Output device")]),e._v(" "),i("th",[e._v("Audio sink")]),e._v(" "),i("th",[e._v("Description")])])]),e._v(" "),i("tbody",[i("tr",[i("td",[e._v("javasound")]),e._v(" "),i("td",[e._v("System Speaker")]),e._v(" "),i("td",[e._v("This uses the JRE sound drivers to play audio to the local sound interface.")])]),e._v(" "),i("tr",[i("td",[e._v("enhancedjavasound")]),e._v(" "),i("td",[e._v("System Speaker (with mp3 support)")]),e._v(" "),i("td",[e._v("This uses the JRE sound drivers plus an additional 3rd party library, which adds support for mp3 files.")])]),e._v(" "),i("tr",[i("td",[e._v("webaudio")]),e._v(" "),i("td",[e._v("Web Audio")]),e._v(" "),i("td",[e._v("If sounds should not be played on the server but on the client: This sink sends the audio stream through HTTP to web clients, which then cause it to be played back by the browser. The browser needs to be opened and have a compatible UI running. Currently this feature is supported by Paper UI and HABPanel.")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"audio-sink-implementation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#audio-sink-implementation","aria-hidden":"true"}},[this._v("#")]),this._v(" Audio sink implementation")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"audio-source-implementation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#audio-source-implementation","aria-hidden":"true"}},[this._v("#")]),this._v(" Audio source implementation")])}],!1,null,null,null);t.default=a.exports}}]);