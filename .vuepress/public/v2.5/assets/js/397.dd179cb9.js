(window.webpackJsonp=window.webpackJsonp||[]).push([[397],{1002:function(t,e,r){"use strict";r.r(e);var a=r(0),s=Object(a.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"swegon-ventilation-binding"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#swegon-ventilation-binding","aria-hidden":"true"}},[t._v("#")]),t._v(" Swegon Ventilation Binding  "),r("Badge",{attrs:{type:"warn",text:"v1"}})],1),t._v(" "),r("p",[t._v("This binding is used to get live data from Swegon ventilation systems into items in openHAB. It should be compatible with at least Swegon CASA models.")]),t._v(" "),t._m(0),t._v(" "),t._m(1),t._v(" "),r("p",[t._v("C code is available "),r("a",{attrs:{href:"https://github.com/openhab/openhab/blob/master/bundles/binding/org.openhab.binding.swegonventilation/SwegonGW/swegongw.c",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),r("OutboundLink")],1),t._v(".")]),t._v(" "),r("p",[t._v("Build:")]),t._v(" "),t._m(2),r("p",[t._v("Run:")]),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),r("p",[t._v("Format:")]),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),r("DocPreviousVersions"),t._v(" "),r("EditPageLink")],1)},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"prerequisites"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites","aria-hidden":"true"}},[this._v("#")]),this._v(" Prerequisites")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("swegongw")]),this._v(" is an application that reads packets from a serial port (an RS-485 adapter is needed) and relays them to openHAB via UDP. The Swegon Ventilation binding listens on the UDP port and extracts control data from UDP packets.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("gcc -std=gnu99 -o swegongw swegongw.c\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("swegongw -h \nswegongw -v -d /dev/ttyUSB0 -a 192.168.1.10\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"binding-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#binding-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Binding Configuration")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("This binding can be configured in the file "),e("code",[this._v("services/swegonventilation.cfg")]),this._v(".")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("table",[r("thead",[r("tr",[r("th",[t._v("Property")]),t._v(" "),r("th",[t._v("Default")]),t._v(" "),r("th",{staticStyle:{"text-align":"center"}},[t._v("Required")]),t._v(" "),r("th",[t._v("Description")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("udpPort")]),t._v(" "),r("td",[t._v("9998")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("No")]),t._v(" "),r("td",[t._v("UDP port on which the binding will listen")])]),t._v(" "),r("tr",[r("td",[t._v("throttleTime")]),t._v(" "),r("td",[t._v("0")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("No")]),t._v(" "),r("td",[t._v("Throttle received messages. 0 = throttle is disabled, otherwise throttle time in milliseconds.")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"item-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#item-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Item Configuration")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('    swegonventilation="<data>"\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Where "),e("code",[this._v("<data>")]),this._v(" identifies a datum to retrieve:")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("table",[r("thead",[r("tr",[r("th",[r("code",[t._v("<data>")])]),t._v(" "),r("th",[t._v("Item Type")]),t._v(" "),r("th",[t._v("Purpose")]),t._v(" "),r("th",[t._v("Note")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("T1")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Temperature sensor 1")]),t._v(" "),r("td")]),t._v(" "),r("tr",[r("td",[t._v("T2")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Temperature sensor 2")]),t._v(" "),r("td")]),t._v(" "),r("tr",[r("td",[t._v("T3")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Temperature sensor 3")]),t._v(" "),r("td")]),t._v(" "),r("tr",[r("td",[t._v("T4")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Temperature sensor 4")]),t._v(" "),r("td")]),t._v(" "),r("tr",[r("td",[t._v("T5")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Temperature sensor 5")]),t._v(" "),r("td")]),t._v(" "),r("tr",[r("td",[t._v("T6")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Temperature sensor 6")]),t._v(" "),r("td")]),t._v(" "),r("tr",[r("td",[t._v("T7")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Temperature sensor 7")]),t._v(" "),r("td")]),t._v(" "),r("tr",[r("td",[t._v("T8")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Temperature sensor 8")]),t._v(" "),r("td")]),t._v(" "),r("tr",[r("td",[t._v("OutdoorTemperature")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Temperature sensor")]),t._v(" "),r("td",[t._v("T1")])]),t._v(" "),r("tr",[r("td",[t._v("SupplyAirTemperature")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Temperature sensor")]),t._v(" "),r("td",[t._v("T2")])]),t._v(" "),r("tr",[r("td",[t._v("ExtractAirTemperature")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Temperature sensor")]),t._v(" "),r("td",[t._v("T3")])]),t._v(" "),r("tr",[r("td",[t._v("SupplyAirTemperatureReheated")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Temperature sensor")]),t._v(" "),r("td",[t._v("T4")])]),t._v(" "),r("tr",[r("td",[t._v("ExhaustAirTemperature")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Temperature sensor")]),t._v(" "),r("td",[t._v("T8")])]),t._v(" "),r("tr",[r("td",[t._v("SupplyAirFanSpeed")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Fan speed  rpm")]),t._v(" "),r("td")]),t._v(" "),r("tr",[r("td",[t._v("ExtractAirFanSpeed")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Fan speed  rpm")]),t._v(" "),r("td")]),t._v(" "),r("tr",[r("td",[t._v("Efficiency")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Efficiency")]),t._v(" "),r("td",[t._v("Calculated by system")])]),t._v(" "),r("tr",[r("td",[t._v("EfficiencySupply")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Efficiency")]),t._v(" "),r("td",[t._v("Calculated by binding")])]),t._v(" "),r("tr",[r("td",[t._v("EfficiencyExtract")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Efficiency")]),t._v(" "),r("td",[t._v("Calculated by binding")])]),t._v(" "),r("tr",[r("td",[t._v("FanSpeed")]),t._v(" "),r("td",[t._v("Number")]),t._v(" "),r("td",[t._v("Fan speed")]),t._v(" "),r("td",[t._v("Fan speed 1â€¦5")])]),t._v(" "),r("tr",[r("td",[t._v("PreheatState")]),t._v(" "),r("td",[t._v("Switch")]),t._v(" "),r("td",[t._v("Heating")]),t._v(" "),r("td",[t._v("Preheat state")])]),t._v(" "),r("tr",[r("td",[t._v("ReheatState")]),t._v(" "),r("td",[t._v("Switch")]),t._v(" "),r("td",[t._v("Heating")]),t._v(" "),r("td",[t._v("Reheat state")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"examples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[this._v("#")]),this._v(" Examples")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-dsl"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Number")]),t._v("\t"),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutdoorTemperature")]),t._v("\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" swegonventilation"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OutdoorTemperature"')]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Number")]),t._v("\t"),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SupplyAirFanSpeed")]),t._v("\t"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" swegonventilation"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SupplyAirFanSpeed"')]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Switch")]),t._v("\t"),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Preheat")]),t._v("\t            "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" swegonventilation"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PreheatState"')]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])}],!1,null,null,null);e.default=s.exports}}]);