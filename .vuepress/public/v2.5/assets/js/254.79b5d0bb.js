(window.webpackJsonp=window.webpackJsonp||[]).push([[254],{820:function(e,t,s){"use strict";s.r(t);var n=s(0),a=Object(n.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._m(0),e._v(" "),s("p",[e._v("This binding allows to you use a keyboard to control your openHAB instance.\nIt works by exposing all keys on the keyboard as channels.")]),e._v(" "),s("p",[e._v("As indicated by the name of the binding this only works on Linux.\n(It uses the libevdev library the receive events from the kernel)\nAs all the low-level protocols are handled by the Linux kernel it works for any\nkind of keyboard; USB, Bluetooth, etc.")]),e._v(" "),e._m(1),e._v(" "),s("p",[e._v("All keyboards supported by the Linux kernel.")]),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._m(12),e._v(" "),e._m(13),e._m(14),e._v(" "),s("p",[e._v("Each Thing provides multiple channels")]),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),s("p",[e._v("The following happens when pressing and releasing a key:")]),e._v(" "),e._m(17),e._v(" "),e._m(18),e._v(" "),e._m(19),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),s("p",[e._v("Channel states are updated first to allow rules triggered by channel triggers to access the new state.")]),e._v(" "),s("DocPreviousVersions"),e._v(" "),s("EditPageLink")],1)},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"linux-input-binding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux-input-binding","aria-hidden":"true"}},[this._v("#")]),this._v(" Linux Input Binding")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"supported-things"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#supported-things","aria-hidden":"true"}},[this._v("#")]),this._v(" Supported Things")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"discovery"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#discovery","aria-hidden":"true"}},[this._v("#")]),this._v(" Discovery")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("The discovery feature finds all cold- or hotplugged keyboards by watching the\n"),s("code",[e._v("/dev/input/")]),e._v(" directory.\nThe discovery uses the numeric ids for the devices. ("),s("code",[e._v("/dev/input/event0")]),e._v(",\netc...).\nThis can lead to issues when the kernel autodiscovery enumerates devices in a\nnondeterministic order. This problem can be circumvented by using predictable\ndevice names in "),s("code",[e._v("/dev/input/by-id/")]),e._v(" or "),s("code",[e._v("/dev/input/by-path/")]),e._v(" or by using Udev\nfacilities (out of scope for this document).")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"binding-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#binding-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Binding Configuration")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("openHAB will need rights on the "),t("code",[this._v("/dev/input/")]),this._v(" files it is supposed to access.\nThis can be implemented by group-memberships, (custom) initscripts or Udev\nrules.\nThe exact configurations possible depend on your system (out of scope for this document).")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The "),t("code",[this._v("libevdev")]),this._v(" library has to be installed for this plugin to work.\n(It should be available via your package manager)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"thing-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#thing-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Thing Configuration")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Each thing has has to be explicitly enabled after it is configured.\nWhile it is enabled "),t("em",[this._v("all")]),this._v(" of the generated events will be consumed by openHAB.\nThe device will not be available for normal input processing!")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"static-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#static-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Static configuration")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"thing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#thing","aria-hidden":"true"}},[this._v("#")]),this._v(" Thing")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dsl"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Thing")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("linuxinput"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("input")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("device"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("some"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("keyboard "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" enable"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" path"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/dev/input/eventXX"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"item"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#item","aria-hidden":"true"}},[this._v("#")]),this._v(" Item")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dsl"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("Contact")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("SomeButton")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Some Button"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" channel"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"linuxinput:input-device:event17:keypresses#KEY_0"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"channels"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#channels","aria-hidden":"true"}},[this._v("#")]),this._v(" Channels")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("A "),t("code",[this._v("key")]),this._v(" channel that aggregates all events.")]),this._v(" "),t("li",[this._v("Per physical key channels.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"events"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#events","aria-hidden":"true"}},[this._v("#")]),this._v(" Events")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"press"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#press","aria-hidden":"true"}},[this._v("#")]),this._v(" Press")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ol",[s("li",[e._v("State of global key channel updated to new key.")]),e._v(" "),s("li",[e._v("State of per-key channel updated to "),s("code",[e._v('"CLOSED"')]),e._v(".")]),e._v(" "),s("li",[e._v("Global key channel triggered with the current key name.")]),e._v(" "),s("li",[e._v("Per-key channel triggered with "),s("code",[e._v('"PRESSED"')]),e._v('".')]),e._v(" "),s("li",[e._v("State of global key channel updated to "),s("code",[e._v('""')]),e._v(" (Empty string)")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"release"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#release","aria-hidden":"true"}},[this._v("#")]),this._v(" Release")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[this._v("State of per-key channel updated to "),t("code",[this._v('"OPEN"')])]),this._v(" "),t("li",[this._v("Per-key channel triggered with "),t("code",[this._v('"RELEASED"')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"rationale"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rationale","aria-hidden":"true"}},[this._v("#")]),this._v(" Rationale")])}],!1,null,null,null);t.default=a.exports}}]);