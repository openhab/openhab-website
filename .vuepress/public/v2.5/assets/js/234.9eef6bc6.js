(window.webpackJsonp=window.webpackJsonp||[]).push([[234],{787:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("This is a openHAB binding for the Universal Devices ISY 994i router and PLM. Universal Devices offers a Java SDK for\nexternal programs to communicate with the router. Alternatives include an extensive REST API. See details at\n"),s("a",{attrs:{href:"https://www.universal-devices.com/isy-developers/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.universal-devices.com/isy-developers/"),s("OutboundLink")],1),t._v(".")]),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("The following settings can be added to the Items definition.")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),s("p",[t._v('You can specify a specific device type to let the binding know that a device is a special type.  This is done using the "type=" configuation item in the binding.')]),t._v(" "),s("p",[t._v("There are currently 3 types available:")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),s("p",[t._v("The transform file (watersensor-en.map) for the water sensor is:")]),t._v(" "),t._m(7),t._m(8),t._v(" "),s("p",[t._v("The following settings configure the ISY binding in the openhab.cfg file.")]),t._v(" "),t._m(9),s("DocPreviousVersions"),t._v(" "),s("EditPageLink")],1)},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"isy-binding"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isy-binding","aria-hidden":"true"}},[this._v("#")]),this._v(" ISY Binding")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"items-configuration-with-isy-binding-details"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#items-configuration-with-isy-binding-details","aria-hidden":"true"}},[this._v("#")]),this._v(" Items Configuration with ISY Binding Details")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v('ctrl - Controller address in the format "x.y.z.w". This can be the address of a ISY Insteon Scene. Insteon addresses use the first three bytes and the last byte identified a particular capability of the device.')]),t._v(" "),s("li",[t._v('type - This can be used to select device types with special configuration needs.  See the "Device Types" section below.')]),t._v(" "),s("li",[t._v("cmd - Specific ISY control to send to the ISY router as a command, "),s("strong",[t._v("ST")]),t._v(" is the default if left out")]),t._v(" "),s("li",[t._v("addr - The Insteon address to monitor for the change. A scene does not report a status change, only the devices in the scene do. Specify the controller of the scene here. Defaults to the controller address if left out")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"device-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#device-types","aria-hidden":"true"}},[this._v("#")]),this._v(" Device Types")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("thermostat - required to perform temperature calculations properly")]),this._v(" "),e("li",[this._v("lock - locks use the security command instead of the normal off/on commands")]),this._v(" "),e("li",[this._v("heartbeat - several battery powered sensors send a heartbeat.  This is just a ST (status) with value 255, and it means that the sensor is still alive.  To make rules easier, you can define these as type=heartbeat with an item type of DateTime, and it will update with the current time every time the heartbeat is received.  You can then check the item using a rule to see if the DateTime item is too old.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"item-examples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#item-examples","aria-hidden":"true"}},[this._v("#")]),this._v(" Item Examples")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dsl"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* Insteon-enabled thermostat.  Note "type=thermostat" to ensure proper temp calculations, and cmd=CLISPH to use the ISY setpoint heat value instead of status */')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Number")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Temperature_Indoor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Inside [%.2f °F]"')]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v(" <temperature>")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v(" (All)")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("isy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ctrl=29.24.98.1,type=thermostat,cmd=ST"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Number")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Temperature_Setpoint")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Desired Temperature [%.2f °F]"')]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v(" <temperature>")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v(" (All)")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("isy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ctrl=29.24.98.1,type=thermostat,cmd=CLISPH"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Regular ISY scene id #12220, but look at device 30.CB.66.1 to get the scene status */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Light_Hallway2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hallway"')]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v(" <switch>")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v(" (GroundFloor,Lights)")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("isy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ctrl=12220,addr=30.CB.66.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* Regular ISY device, controlled directly (won\'t update scenes!)\nSwitch K_DiningRoom_Light "Dining Room Light" (GroundFloor,Lights) {isy="ctrl=F.C3.7C.1"}\n\n/* ZWave lock.  Note type=lock (makes it use the security commands necessary). The second (Number) entry watches the BATLVL value, which battery-powered devices use to report battery level in percent */')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BDoorLock")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Back Door Lock"')]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v(" <lock>")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v(" (Locks)")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("isy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ctrl=ZW004_1,type=lock"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Number")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BDoorLock_Battery")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Back Door Lock Battery [%d]"')]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v(" <battery>")]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v(" (Locks,BattLevels)")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("isy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ctrl=ZW004_1,cmd=BATLVL"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Insteon FanLinc, set up with a Keypadlinc.  4 scenes - Off, Low, Med, High */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LR_Fan_Off")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LR Fan Off"')]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v(" (ISYScenes)")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("isy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ctrl=4622,addr=1c.e2.d1.3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" autoupdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LR_Fan_Low")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LR Fan Low"')]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v(" (ISYScenes)")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("isy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ctrl=20771,addr=1c.e2.d1.4"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" autoupdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LR_Fan_Med")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LR Fan Med"')]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v(" (ISYScenes)")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("isy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ctrl=22031,addr=1c.e2.d1.5"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" autoupdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LR_Fan_High")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LR Fan High"')]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v(" (ISYScenes)")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("isy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ctrl=11187,addr=1c.e2.d1.6"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" autoupdate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* Insteon water sensor - it has 3 subdevices: 1 = dry, 2 = wet, 4 = heartbeat\n   The heartbeat device sends an "ON" (255) ST code as a heartbeat.  With type=heartbeat, the binding\n   sends a DateTime value.  You can use a rule to check that DateTime to see if you have received\n   a heartbeat recently */')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Contact")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Water_Heater_Dry")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Water Heater Sensor [MAP(watersensor-en.map):%s]"')]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v(" (Sensors)")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("isy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"addr=25.AD.4F.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DateTime")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Water_Heater_Heartbeat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Water Heater HB [%1$td.%1$tm.%1$tY %1$tH:%1$tM]"')]),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v(" (Sensors)")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("isy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"addr=25.AD.4F.4"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("heartbeat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("CLOSED=Wet\nOPEN=Dry\nundefined=Unknown\n-=Unknown\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"isy-binding-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isy-binding-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" ISY Binding Configuration")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("isy:refresh=60000 # refresh interval in milliseconds (optional, defaults to 60000 [1 minute])\nisy:upnp=true # if true, use UPNP to communicate with the ISY 994i\nisy:uuid=uuid:%your_uudid% # UUID of the ISY router\nisy:ip=192.168.x.x # the hostname of the ISY router\nisy:port=80 # the port of the ISY router\nisy:user=user # the user of the ISY router\nisy:password=password # the password of the ISY router\n")])])])}],!1,null,null,null);e.default=n.exports}}]);