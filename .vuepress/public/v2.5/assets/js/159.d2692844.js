(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{670:function(e,t,n){"use strict";n.r(t);var i=n(0),a=Object(i.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"dmx-binding"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dmx-binding","aria-hidden":"true"}},[e._v("#")]),e._v(" DMX Binding "),n("Badge",{attrs:{type:"warn",text:"v1"}})],1),e._v(" "),n("div",{staticClass:"danger custom-block"},[n("p",{staticClass:"custom-block-title"},[e._v("OBSOLETE BINDING")]),e._v(" "),n("p",[e._v("This 1.x binding is obsolete; it has been replaced by the 2.x "),n("router-link",{attrs:{to:"./../dmx/"}},[e._v("dmx")]),e._v(" binding which you should use instead.")],1)]),e._v(" "),n("p",[e._v("The openHAB DMX binding can control DMX devices like RGB LED strips, dimmers\nand more.")]),e._v(" "),n("p",[n("a",{attrs:{href:"http://www.youtube.com/watch?v=o0J4qyyfhio",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"http://img.youtube.com/vi/o0J4qyyfhio/0.jpg",alt:"Demo Video"}}),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("The DMX binding consists of 2 bundles: the core binding bundle\n(org.openhab.binding.dmx.jar), which is responsible for managing the openHAB\nitems and commands and the device interface bundle, which is responsible for\nsending commands to a DMX device.")]),e._v(" "),n("p",[e._v("The following device interface bundles are available:")]),e._v(" "),n("ul",[n("li",[e._v("org.openhab.binding.dmx.artnet : An interface using Artnet (since 1.4.0)")]),e._v(" "),n("li",[e._v("org.openhab.binding.dmx.ola : An interface using\n"),n("a",{attrs:{href:"https://www.openlighting.org/ola/",target:"_blank",rel:"noopener noreferrer"}},[e._v("OLA"),n("OutboundLink")],1),e._v(" as a bridge. This interface only\nsupports localhost bindings.")])]),e._v(" "),e._m(0),e._v(" "),e._m(1),e._v(" "),n("p",[e._v('If you use the OLA interface, you will also need to configure OLA.\nSee "Installing OLA" below.')]),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),n("p",[e._v("DMX channels can be linked to switch, dimmer and color items.")]),e._v(" "),n("p",[e._v("The DMX binding configuration contains a channel configuration and 0 or more\ncommand configurations. It has the following structure:")]),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),n("p",[e._v("There can be only one channel configuration structure per openHAB item.  The\nchannel configuration links one or more DMX channels to an item and it\ncontains the following structure:")]),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),n("p",[e._v("Using the command configuration, behavior of the default openHAB commands for\nthe DMX devices can be overridden. The command configuration has the following\ngeneric structure:")]),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),n("p",[e._v("The FADE command accepts the following parameter structure(s):")]),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),e._m(18),e._v(" "),n("p",[e._v("The SFADE (Suspending Fade) command is very similar to the FADE command.  It\ndiffers from the FADE command in that it suspends any active fades before\nexecuting a new fade.  After the fade has completed, the original fade which\nwas running before the SFADE started is resumed. It accepts the following\nparameter structure(s):")]),e._v(" "),e._m(19),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),e._m(22),e._v(" "),e._m(23),e._v(" "),e._m(24),e._v(" "),n("p",[e._v("The same binding could also be written as:")]),e._v(" "),e._m(25),e._v(" "),e._m(26),e._v(" "),e._m(27),e._v(" "),e._m(28),e._v(" "),e._m(29),e._v(" "),e._m(30),e._v(" "),e._m(31),e._v(" "),n("p",[e._v("As a quick reference, an example installation is described below on how to\ninstall OLA on a Raspberry Pi running Raspbian Wheezy and configure it for\nuse with an Entec Open DMX USB dongle.")]),e._v(" "),n("p",[e._v("For detailed instructions on how to install and configure OLA on different\nplatforms or with different devices, consult the "),n("a",{attrs:{href:"https://www.openlighting.org/ola/getting-started/downloads/",target:"_blank",rel:"noopener noreferrer"}},[e._v("OLA documentation"),n("OutboundLink")],1),e._v(".")]),e._v(" "),e._m(32),e._v(" "),n("p",[e._v("OLA is now in the Debian/Ubuntu/Raspbian repositiories, so you can install the binaries with the following commands:")]),e._v(" "),e._m(33),e._v(" "),n("p",[e._v("When prompted whether to start OLA at boot, select Yes.")]),e._v(" "),n("p",[e._v("If this doesn't work, you may be using a very old OS and will need to edit the software repository list using the following command:")]),e._v(" "),e._m(34),e._v(" "),n("p",[e._v("And add the following line to the list:")]),e._v(" "),e._m(35),e._v(" "),n("p",[e._v("After saving the file re-run the commands above")]),e._v(" "),e._m(36),e._v(" "),n("p",[e._v("OLA can bind to many different protocols and devices (check\n"),n("a",{attrs:{href:"https://www.openlighting.org/ola/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),n("OutboundLink")],1),e._v(" for a full\nlist of supported protocols and devices).  In a typical setup, only a\nsingle device is needed.  To optimize performance, it is recommended to disable\nall other devices and protocols which are not used.")]),e._v(" "),n("p",[e._v("Depending on how OLA was installed, the OLA configuration files for the devices\nand protocols will be in the directory /var/lib/ola/conf/ or ~/.ola.")]),e._v(" "),e._m(37),e._v(" "),n("p",[e._v("Next, open the following USB device rule file:")]),e._v(" "),e._m(38),e._v(" "),n("p",[e._v("and add the following rule:")]),e._v(" "),e._m(39),e._v(" "),n("p",[e._v("Restart the Raspberry to start OLA.")]),e._v(" "),e._m(40),e._v(" "),n("p",[e._v("To use a custom interface rather than OLA can be easily achieved by creating a\nnew osgi bundle which implements the org.openhab.binding.dmx.DmxConnection\ninterface.")]),e._v(" "),n("p",[e._v("To use, simply deploy the core dmx bundle and the custom interface bundle.")]),e._v(" "),e._m(41),e._v(" "),e._m(42),e._v(" "),n("p",[e._v("Starting with 1.9.0 you can configure how often the output will be refreshed.\nEvery 35ms the binding checks whether one of the channels has changed. If\nthis is the case, the new values will be sent to the configured output. If\nnone of the channels have changed, prior versions of the binding never sent\nupdates. This works in most cases, however it is not compliant with the\nunderlying standards (not sending updates for 1 second is considered as DATA\nLOST in the E1.11 standard; the receiver behaviour for this case is not\ndefined).")]),e._v(" "),e._m(43),e._v(" "),n("DocPreviousVersions"),e._v(" "),n("EditPageLink")],1)},[function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"prerequisites"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites","aria-hidden":"true"}},[this._v("#")]),this._v(" Prerequisites")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("To use the DMX binding, install the core bundle and "),t("strong",[this._v("one")]),this._v(" device interface\nbundle and add binding information to your configuration, then define\nappropriate connection details.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"binding-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#binding-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Binding Configuration")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The binding can be configured in the file "),t("code",[this._v("services/dmx.cfg")]),this._v(".")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("Property")]),e._v(" "),n("th",[e._v("Default")]),e._v(" "),n("th",{staticStyle:{"text-align":"center"}},[e._v("Required")]),e._v(" "),n("th",[e._v("Description")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("connection")]),e._v(" "),n("td"),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[e._v("Yes")]),e._v(" "),n("td",[e._v("A set of IP addresses and ports to use to connect")])]),e._v(" "),n("tr",[n("td",[e._v("repeatMode")]),e._v(" "),n("td",[e._v("always")]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[e._v("No")]),e._v(" "),n("td",[e._v("How often the output will be refreshed (in milliseconds)")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("repeatMode")]),this._v(" may take any of these values: always, never, reduced.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("code",[e._v("always")]),e._v(" will send every update, regardless of a change")]),e._v(" "),n("li",[n("code",[e._v("never")]),e._v(" sends updates only when there has been a change (this is the behaviour\nof pre-1.9.0 versions)")]),e._v(" "),n("li",[n("code",[e._v("reduced")]),e._v(" sends three updates if nothing has changed and then suppresses the\noutput for approximately 800 milliseconds")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"item-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#item-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Item Configuration")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('dmx="CHANNEL[<channel-config>], <OPENHAB-COMMAND>[<dmx-command>], <OPENHAB-COMMAND>[<dmx-command>], ..."\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"channel-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#channel-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Channel Configuration")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("CHANNEL[<channels>/<channel-width>:<status-update-frequency>]\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("Item")]),e._v(" "),n("th",[e._v("Description")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("channels")]),e._v(" "),n("td",[e._v("CSV list of DMX channel numbers of the device")])]),e._v(" "),n("tr",[n("td",[e._v("channel-width")]),e._v(" "),n("td",[e._v("Optional width of the DMX channels on a device (e.g 1 for switch, 3 for RGB, 4 for RGBW).  When channel-width is used, only a single channel may be specified in "),n("code",[e._v("channels")]),e._v(".  If no value is specified in a binding to a color item, a default width of 3 is assumed.")])]),e._v(" "),n("tr",[n("td",[e._v("status-update-frequency")]),e._v(" "),n("td",[e._v("Optional delay in milliseconds between status updates for continuously changing values.  If this value is omitted or a value less than 100 is used, no status updates are sent to the openHAB bus.  If the same DMX channel is linked to multiple openHAB items, at most one item should be configured with the status-update-frequency to prevent unnecessary events on the openHAB bus.")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"command-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#command-configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Command Configuration")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("<OPENHAB-COMMAND>[<dmx-command>|<command-parameters>|<command-parameters>|..]\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("Item")]),e._v(" "),n("th",[e._v("Description")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("OPENHAB-COMMAND")]),e._v(" "),n("td",[e._v("openHAB command to override, e.g. ON, OFF, INCREASE, DECREASE, etc.")])]),e._v(" "),n("tr",[n("td",[e._v("dmx-command")]),e._v(" "),n("td",[e._v("DMX-command name, e.g. FADE")])]),e._v(" "),n("tr",[n("td",[e._v("command-parameters")]),e._v(" "),n("td",[e._v("Repeatable command parameter sections for use with the DMX command")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"fade-command"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fade-command","aria-hidden":"true"}},[this._v("#")]),this._v(" FADE Command")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("<fade-time>:<target-channel-value>,<target-channel-value>,...:<hold-time>\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("Item")]),e._v(" "),n("th",[e._v("Description")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("fade-time")]),e._v(" "),n("td",[e._v("The time (in milliseconds) to use to fade from the current values to the new target values.")])]),e._v(" "),n("tr",[n("td",[e._v("target-channel-value")]),e._v(" "),n("td",[e._v("A CSV list of channel fade target values for each of the DMX channels.  The values must be in the range of 0-255.  If this list contains fewer values than the number of DMX channels specified in the channel configuration, the target values are repeated for the remaining DMX channels.")])]),e._v(" "),n("tr",[n("td",[e._v("hold-time")]),e._v(" "),n("td",[e._v("The time (in milliseconds) to hold the target values.  A value of -1 can be used to hold indefinitely.")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"sfade-command"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sfade-command","aria-hidden":"true"}},[this._v("#")]),this._v(" SFADE Command")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("<fade-time>:<target-channel-value>,<target-channel-value>,...:<hold-time>\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[this._v("#")]),this._v(" Examples")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"configuration-settings-examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuration-settings-examples","aria-hidden":"true"}},[this._v("#")]),this._v(" Configuration settings examples")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("table",[n("thead",[n("tr",[n("th",[e._v("Interface")]),e._v(" "),n("th",[e._v("Example Configuration")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("Artnet")]),e._v(" "),n("td",[e._v("connection=192.168.2.151,192.168.2.201")])]),e._v(" "),n("tr",[n("td",[e._v("OLA")]),e._v(" "),n("td",[e._v("connection=localhost:9010")])]),e._v(" "),n("tr",[n("td",[e._v("Lib485")]),e._v(" "),n("td",[e._v("connection=localhost:9020")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"channel-configuration-examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#channel-configuration-examples","aria-hidden":"true"}},[this._v("#")]),this._v(" Channel configuration examples")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[t("p",[this._v("RGB LED strip of which the first channel is 7 and which receives a maximum of 1 status update per second:")]),this._v(" "),t("p",[this._v('Color rgb_strip_living_room "RGB Ledstrip Living Room" {dmx="CHANNEL[7:1000]"}')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('Color rgb_strip_living_room "RGB Ledstrip Living Room" {dmx="CHANNEL[7,8,9:1000]"}\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[t("p",[this._v("A binding to a dimmer item which is linked to only the blue channel of the RGB strip above:")]),this._v(" "),t("p",[this._v('Dimmer rgb_strip_living_room_blue_only "Living Room Blue" {dmx="CHANNEL[9]"}')])]),this._v(" "),t("li",[t("p",[this._v("An RGBW LED strip starting at channel 20:")]),this._v(" "),t("p",[this._v('Color rgbw_strip_kitchen "RGBW Ledstrip Kitchen" {dmx="CHANNEL[20/4:1000]"}')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"example-fade-command-configurations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example-fade-command-configurations","aria-hidden":"true"}},[this._v("#")]),this._v(" Example Fade command configurations")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ol",[n("li",[n("p",[e._v("A wake up light which takes 60 seconds to fade from nothing to full brightness.")]),e._v(" "),n("p",[e._v('Dimmer light_bed_room “Light Bedroom” {dmx="CHANNEL[20:1000], ON[FADE|60000:255,255,255:-1]"}')])]),e._v(" "),n("li",[n("p",[e._v("A light which switches on to full brightness immediately and then fades out after 30 seconds")]),e._v(" "),n("p",[e._v('Dimmer light_hall “Light Stairway Hall” {dmx="CHANNEL[25:1000], ON[FADE|0:255,255,255:30000|5000:0,0,0:-1]"}')])]),e._v(" "),n("li",[n("p",[e._v("An alternating green yellow fade on 2 RGB LED strips.")]),e._v(" "),n("p",[e._v('Switch xmas_leds "Start Yellow-Green Fade Loop" {dmx="CHANNEL[7/6], ON[FADE|500:127,36,0,0,36,0:2000|500:0,36,0,127,36,0:2000]"}')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"example-suspending-fade-command-configurations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example-suspending-fade-command-configurations","aria-hidden":"true"}},[this._v("#")]),this._v(" Example Suspending Fade command configurations")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ol",[t("li",[t("p",[this._v("A short blue white flash pattern on the first 18 dmx channels, which will temporarily replace the active fades on those channels.")]),this._v(" "),t("p",[this._v('Switch all_living_room_leds "Doorbell Flash"\t{dmx="CHANNEL[1/18], ON[FADE|0:255,255,255:125|0:0,0,255:125|0:255,255,255:125|0:0,0,255:125|0:255,255,255:125|0:0,0,255:125|0:255,255,255:125|0:0,0,255:125|0:255,255,255:125|0:0,0,255:125|0:0,0,255:-1]"}')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"installing-ola"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installing-ola","aria-hidden":"true"}},[this._v("#")]),this._v(" Installing OLA")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"installing-ola-binaries"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installing-ola-binaries","aria-hidden":"true"}},[this._v("#")]),this._v(" Installing OLA binaries")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("sudo apt-get update\nsudo apt-get install ola\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("sudo nano /etc/apt/sources.list\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("deb   http://apt.openlighting.org/raspbian  wheezy main\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"configuring-ola-devices"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuring-ola-devices","aria-hidden":"true"}},[this._v("#")]),this._v(" Configuring OLA devices")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The ola-ftdidmx.conf configuration file is needed for the Open DMX USB.\nDisable all other configurations by editing the configuration files and\nchanging the value of the "),t("code",[this._v("enabled")]),this._v(" property to "),t("code",[this._v("false")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("sudo nano /etc/udev/rules.d/30-ftdidmx.rules\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v('ACTION=="add", BUS=="usb", SYSFS{idVendor}=="0403", SYSFS{idProduct}=="6001", GROUP:="dialout", MODE:="0660"\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"using-a-custom-device-connection-interface"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#using-a-custom-device-connection-interface","aria-hidden":"true"}},[this._v("#")]),this._v(" Using a custom device connection interface")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"notes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#notes","aria-hidden":"true"}},[this._v("#")]),this._v(" Notes")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"the-repeatmode-configuration-setting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-repeatmode-configuration-setting","aria-hidden":"true"}},[this._v("#")]),this._v(" The repeatMode configuration setting")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If using a directly connected interface (e.g. RS485), stay with the default\nvalue of "),t("code",[this._v("always")]),this._v(". If using ArtNet, use the "),t("code",[this._v("reduced")]),this._v(" option and minimize\nnetwork load.")])}],!1,null,null,null);t.default=a.exports}}]);