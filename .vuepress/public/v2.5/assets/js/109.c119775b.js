(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{591:function(t,e,s){"use strict";s.r(e);var a=s(0),r=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"xmpp-actions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xmpp-actions","aria-hidden":"true"}},[t._v("#")]),t._v(" XMPP Actions "),s("Badge",{attrs:{type:"warn",text:"v1"}})],1),t._v(" "),s("AddonLogo"),t._v(" "),s("p",[t._v("This set of actions allows you to send a message to an XMPP user or multi-user chat, or send a message with an attachment to an XMPP user.")]),t._v(" "),t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),s("table",[t._m(4),t._v(" "),s("tbody",[t._m(5),t._v(" "),t._m(6),t._v(" "),s("tr",[s("td",[t._v("servername")]),t._v(" "),s("td"),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",[t._v("The XMPP service to use, e.g. "),s("code",[t._v("jabber.de")]),t._v(". A list of public XMPP services can be found at "),s("a",{attrs:{href:"https://xmpp.net/directory.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://xmpp.net/directory.php"),s("OutboundLink")],1)])]),t._v(" "),t._m(7),t._v(" "),s("tr",[s("td",[t._v("tlspin")]),t._v(" "),s("td"),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",[t._v("The TLS Pin used to verify the XMPP service's certificate. Set this in case openHAB's default "),s("code",[t._v("SSLContext")]),t._v(" is unable to verify it (e.g. because the XMPP service uses a self-signed certificate). The PIN value is basically the hash of the certificate in hexadecimal notation. Set "),s("code",[t._v("securitymode")]),t._v(" to "),s("code",[t._v("required")]),t._v(" to enable TLS for XMPP connections. PIN generation is "),s("a",{attrs:{href:"https://github.com/Flowdalic/java-pinning",target:"_blank",rel:"noopener noreferrer"}},[t._v("discussed in detail here"),s("OutboundLink")],1),t._v(" or see "),s("a",{attrs:{href:"#Example_Generate_PIN"}},[t._v("this example")]),t._v(". Example: "),s("code",[t._v("tlspin=CERTSHA256:83:F9:17:1E:06:A3:13:11:88:89:F7:D7:93:02:BD:1B:7A:20:42:EE:0C:FD:02:9A:BF:8D:D0:6F:FA:6C:D9:D3")])])]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13)])]),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._m(20),t._v(" "),s("DocPreviousVersions"),t._v(" "),s("EditPageLink")],1)},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"actions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#actions","aria-hidden":"true"}},[this._v("#")]),this._v(" Actions")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("code",[t._v("sendXMPP(String to, String message)")]),t._v(": Sends a message to an XMPP user")]),t._v(" "),s("li",[s("code",[t._v("sendXMPP(String to, String message, String attachmentUrl)")]),t._v(": Sends a message with an attachment to an XMPP user")]),t._v(" "),s("li",[s("code",[t._v("chatXMPP(String message)")]),t._v(": Sends a message to a multi user chat")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configuration","aria-hidden":"true"}},[this._v("#")]),this._v(" Configuration")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The XMPP Action service can be configured in "),e("code",[this._v("services/xmpp.cfg")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("thead",[e("tr",[e("th",[this._v("Property")]),this._v(" "),e("th",[this._v("Default")]),this._v(" "),e("th",{staticStyle:{"text-align":"center"}},[this._v("Required")]),this._v(" "),e("th",[this._v("Description")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("tr",[s("td",[t._v("username")]),t._v(" "),s("td"),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",[t._v("The username of the XMPP account used by openHAB. Most services will require that you use only the localpart of the account's JID. For example if your account's JID is "),s("code",[t._v("myuser@example.org")]),t._v(", then only configure "),s("code",[t._v("myuser")]),t._v(".")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("password")]),this._v(" "),e("td"),this._v(" "),e("td",{staticStyle:{"text-align":"center"}}),this._v(" "),e("td",[this._v("The password of the XMPP account used by openHAB")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("tr",[s("td",[t._v("securitymode")]),t._v(" "),s("td",[s("code",[t._v("disabled")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("No")]),t._v(" "),s("td",[t._v("The Security mode used for the XMPP connection. Can be either "),s("code",[t._v("required")]),t._v(" or "),s("code",[t._v("disabled")]),t._v(". Defaults to "),s("code",[t._v("disabled")]),t._v(", which means that TLS will not be used.  Warning: If you change this to non-disabled, then you must make sure that your TLS server certificate can be validated, otherwhise the connection will fail.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("proxy")]),this._v(" "),e("td"),this._v(" "),e("td",{staticStyle:{"text-align":"center"}}),this._v(" "),e("td",[this._v("The XMPP Proxyserver to use, e.g. "),e("code",[this._v("gmail.com")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("port")]),this._v(" "),e("td",[e("code",[this._v("5222")])]),this._v(" "),e("td",{staticStyle:{"text-align":"center"}}),this._v(" "),e("td",[this._v("The server port to use")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("consoleusers")]),this._v(" "),e("td"),this._v(" "),e("td",{staticStyle:{"text-align":"center"}}),this._v(" "),e("td",[this._v("A comma-separated list of users that are allowed to use the XMPP console")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("chatroom")]),this._v(" "),e("td"),this._v(" "),e("td",{staticStyle:{"text-align":"center"}}),this._v(" "),e("td",[this._v("The multi user chat to join, e.g. "),e("code",[this._v("openhab@chat.example.com")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("chatnickname")]),this._v(" "),e("td",[e("code",[this._v("openhab-bot")])]),this._v(" "),e("td",{staticStyle:{"text-align":"center"}},[this._v("No")]),this._v(" "),e("td",[this._v("The nickname used in the multi-user chat")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("chatpassword")]),this._v(" "),e("td"),this._v(" "),e("td",{staticStyle:{"text-align":"center"}}),this._v(" "),e("td",[this._v("The password required to join the multi user chat")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("Note: openHAB does not resolve SRV entries like other XMPP clients do, you have to setup the server details manually.\nGenerally, if "),s("code",[t._v("joe@example.org")]),t._v(" is your XMPP user ID and "),s("code",[t._v("xmpp.example.net")]),t._v(" points to the server running the service, set "),s("code",[t._v("servername")]),t._v(" to the actual server "),s("code",[t._v("xmpp.example.net")]),t._v(", the user name "),s("code",[t._v("username")]),t._v(" to "),s("code",[t._v("joe")]),t._v(" and "),s("code",[t._v("proxy")]),t._v(" to the domain name part of your user ID "),s("code",[t._v("example.org")]),t._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"example-google"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-google","aria-hidden":"true"}},[this._v("#")]),this._v(" Example: Google")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("servername"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("talk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("google"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\nsecuritymode"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("required\n# "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("You")]),t._v(" need "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tlspin"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" openhab cannot verify the certificate from the google server "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Badge")]),t._v(" type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warn"')]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v1"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\ntlspin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("CERTSHA256"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9e670d")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6624f")]),t._v("c0c451d8d8e3efa81d4d8246ff9354800de09b549700e8d2a730a\nproxy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("gmail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\nusername"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("my"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("openhab"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@gmail")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\npassword"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mysecret\n# you may need "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" add the cryptic talk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("google"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com address of your "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" google account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" the allowed users "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Badge")]),t._v(" type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warn"')]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v1"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n# check you openhab"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" found the address after you send something via "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hangouts")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" your openHAB account "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Badge")]),t._v(" type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warn"')]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v1"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nconsoleusers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cryptic"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@public")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("talk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("google"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("myname"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@gmail")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"example-generate-pin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-generate-pin","aria-hidden":"true"}},[this._v("#")]),this._v(" Example: Generate PIN")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("Assuming the PEM-encoded certificate is in a file called "),s("code",[t._v("jabber.crt")]),t._v(" (it is PEM encoded if it contains the lines "),s("code",[t._v("BEGIN CERTIFICATE")]),t._v(" and "),s("code",[t._v("END CERTIFICATE")]),t._v(" with lots of dashes in them)  this shell invocation prints the required value for the "),s("code",[t._v("tlspin=")]),t._v(" configuration setting:")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CERTSHA256:'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("openssl x509 -in "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jabber.crt"')]),t._v(" -noout -fingerprint -sha256 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/.*=//'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v("\nCERTSHA256:D8:8E:B1:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(":7D:84\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("You then copy the whole last line into "),e("code",[this._v("tlspin")]),this._v(".")])}],!1,null,null,null);e.default=r.exports}}]);